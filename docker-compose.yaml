services:
  asset-classification:
    build:
      context: .
      dockerfile: ./apps/asset-classification-subgraph/Dockerfile
      target: development
    container_name: asset-classification
    ports:
      - "3001:3001"
    env_file: ./apps/asset-classification-subgraph/.env
    volumes:
      - .:/usr/src/app
    networks:
      - postgres-network
    depends_on:
      - postgres
    restart: unless-stopped
  firm:
    build:
      context: .
      dockerfile: ./apps/firm-subgraph/Dockerfile
      target: development
    container_name: firm-subgraph
    ports:
      - "3002:3002"
    env_file: ./apps/firm-subgraph/.env
    volumes:
      - .:/usr/src/app
    networks:
      - postgres-network
    depends_on:
      - postgres
    restart: unless-stopped
  client:
    build:
      context: .
      dockerfile: ./apps/client-subgraph/Dockerfile
      target: development
    container_name: client-subgraph
    ports:
      - "3003:3003"
    env_file: ./apps/client-subgraph/.env
    volumes:
      - .:/usr/src/app
    networks:
      - postgres-network
    depends_on:
      - firm
      - postgres
    restart: unless-stopped
  holding:
    build:
      context: .
      dockerfile: ./apps/holding-subgraph/Dockerfile
      target: development
    container_name: holding-subgraph
    ports:
      - "3004:3004"
    env_file: ./apps/holding-subgraph/.env
    volumes:
      - .:/usr/src/app
    networks:
      - postgres-network
    depends_on:
      - asset-classification
      - firm
      - client
      - postgres
    restart: unless-stopped
  performance:
    build:
      context: .
      dockerfile: ./apps/performance-subgraph/Dockerfile
      target: development
    container_name: performance-subgraph
    ports:
      - "3005:3005"
    env_file: ./apps/performance-subgraph/.env
    volumes:
      - .:/usr/src/app
    networks:
      - postgres-network
    depends_on:
      - asset-classification
      - firm
      - client
      - postgres
    restart: unless-stopped
  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    container_name: gateway
    ports:
      - "3000:3000"
    env_file: ./apps/gateway/.env
    volumes:
      - .:/usr/src/app
    networks:
      - postgres-network
    depends_on:
      - asset-classification
      - firm
      - client
      - holding
      - postgres
      - performance
    restart: unless-stopped
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres-network
    restart: unless-stopped

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8080:8080"
    networks:
      - postgres-network
    depends_on:
      - postgres
    restart: unless-stopped

networks:
  postgres-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
